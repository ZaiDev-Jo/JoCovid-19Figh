{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\zaida\\\\Documents\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\zaida\\\\Documents\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\zaida\\\\Documents\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Line,Bar}from'react-chartjs-2';import{fetchDailyData}from'../../api';import styles from'./Chart.module.css';var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);var lineChart=dailyData[0]?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Confirmed',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Deaths',borderColor:'red',backgroundColor:'rgba(255, 0, 0, 0.5)',fill:true}]}}):null;console.log(confirmed,recovered,deaths);var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{label:'People',backgroundColor:['rgba(255, 0, 0, 0.5)','rgba(0, 0, 255, 0.5)','rgba(107, 1, 8, 0.9)'],data:[confirmed.value,recovered.value,deaths.value]}]},option:{legend:{display:false},title:{display:true,text:\"Current State in \".concat(country)}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Chart;","map":{"version":3,"sources":["C:/Users/zaida/Documents/my-app/src/Components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","labels","map","date","datasets","label","borderColor","fill","backgroundColor","console","log","barChart","value","legend","display","title","text","container"],"mappings":"0dAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CAEA,OAASC,cAAT,KAA+B,WAA/B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAuD,oBAApDC,IAAoD,CAA7CC,SAA6C,WAA7CA,SAA6C,CAAlCC,SAAkC,WAAlCA,SAAkC,CAAvBC,MAAuB,WAAvBA,MAAuB,CAAbC,OAAa,MAAbA,OAAa,eAChCX,QAAQ,CAAC,EAAD,CADwB,wCAC5DY,SAD4D,eACjDC,YADiD,eAGnEZ,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,QAAQ,2FAAG,+IACfD,YADe,uBACIT,CAAAA,cAAc,EADlB,qHAAH,kBAARU,CAAAA,QAAQ,2CAAd,CAKAA,QAAQ,GACT,CAPQ,CAON,EAPM,CAAT,CASA,GAAMC,CAAAA,SAAS,CACjBH,SAAS,CAAC,CAAD,CAAT,cAEE,oBAAC,IAAD,EACA,IAAI,CAAE,CACJI,MAAM,CAAEJ,SAAS,CAACK,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAAd,CADJ,CAERC,QAAQ,CAAE,CAAC,CACLZ,IAAI,CAAEK,SAAS,CAACK,GAAV,CAAc,mBAAGT,CAAAA,SAAH,OAAGA,SAAH,OAAmBA,CAAAA,SAAnB,EAAd,CADD,CAEVY,KAAK,CAAE,WAFG,CAGVC,WAAW,CAAE,SAHH,CAITC,IAAI,CAAE,IAJG,CAAD,CAKP,CACEf,IAAI,CAAEK,SAAS,CAACK,GAAV,CAAc,mBAAGP,CAAAA,MAAH,OAAGA,MAAH,OAAgBA,CAAAA,MAAhB,EAAd,CADR,CAEHU,KAAK,CAAE,QAFJ,CAGHC,WAAW,CAAE,KAHV,CAIHE,eAAe,CAAE,sBAJd,CAKHD,IAAI,CAAE,IALH,CALO,CAFF,CADN,EAFF,CAkBQ,IAnBN,CAqBFE,OAAO,CAACC,GAAR,CAAajB,SAAb,CAAwBC,SAAxB,CAAmCC,MAAnC,EACE,GAAMgB,CAAAA,QAAQ,CACZlB,SAAS,cAEP,oBAAC,GAAD,EACA,IAAI,CAAE,CACJQ,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CADJ,CAEJG,QAAQ,CAAC,CAAC,CACRC,KAAK,CAAE,QADC,CAERG,eAAe,CAAE,CACf,sBADe,CAEf,sBAFe,CAGf,sBAHe,CAFT,CAORhB,IAAI,CAAC,CAAEC,SAAS,CAACmB,KAAZ,CAAmBlB,SAAS,CAACkB,KAA7B,CAAoCjB,MAAM,CAACiB,KAA3C,CAPG,CAAD,CAFL,CADN,CAaA,MAAM,CAAE,CACNC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADF,CAENC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAX,CAAiBE,IAAI,4BAAsBpB,OAAtB,CAArB,CAFD,CAbR,EAFO,CAqBL,IAtBN,CAwBA,mBACE,2BAAK,SAAS,CAAEN,MAAM,CAAC2B,SAAvB,EACHrB,OAAO,CAAGe,QAAH,CAAcX,SADlB,CADF,CAKD,CA/DD,CAiEA,cAAeT,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: {confirmed, recovered, deaths }, country}) => { \r\n  const [dailyData, setDailyData]  = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    }\r\n\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = (\r\ndailyData[0]\r\n?(\r\n  <Line\r\n  data={{\r\n    labels: dailyData.map(({ date }) => date),\r\ndatasets: [{\r\n      data: dailyData.map(({ confirmed }) => confirmed),\r\n label: 'Confirmed',\r\n borderColor: '#3333ff',\r\n  fill: true,\r\n}, {\r\n     data: dailyData.map(({ deaths }) => deaths),\r\nlabel: 'Deaths',\r\nborderColor: 'red',\r\nbackgroundColor: 'rgba(255, 0, 0, 0.5)',\r\nfill: true,\r\n}],\r\n  }}\r\n  />) : null\r\n  );\r\nconsole.log( confirmed, recovered, deaths );\r\n  const barChart = (\r\n    confirmed\r\n    ?(\r\n      <Bar \r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets:[{\r\n          label: 'People',\r\n          backgroundColor: [\r\n            'rgba(255, 0, 0, 0.5)',\r\n            'rgba(0, 0, 255, 0.5)',\r\n            'rgba(107, 1, 8, 0.9)',\r\n          ],\r\n          data:[ confirmed.value, recovered.value, deaths.value ]\r\n        }]\r\n      }}\r\n      option={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current State in ${country}`},\r\n\r\n      }}\r\n      />\r\n    ) : null\r\n  )\r\n  return (\r\n    <div className={styles.container}>\r\n{country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}