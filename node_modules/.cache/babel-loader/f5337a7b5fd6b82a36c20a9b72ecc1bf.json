{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\zaida\\\\Documents\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\zaida\\\\Documents\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var url='https://covid19.mathdro.id/api';export var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var changeableUrl,_yield$axios$get,_yield$axios$get$data,confirmed,recovered,deaths,lastUpdate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:changeableUrl=url;if(country){changeableUrl=\"\".concat(url,\"/countries/\").concat(country);}_context.prev=2;_context.next=5;return axios.get(changeableUrl);case 5:_yield$axios$get=_context.sent;_yield$axios$get$data=_yield$axios$get.data;confirmed=_yield$axios$get$data.confirmed;recovered=_yield$axios$get$data.recovered;deaths=_yield$axios$get$data.deaths;lastUpdate=_yield$axios$get$data.lastUpdate;return _context.abrupt(\"return\",{confirmed:confirmed,recovered:recovered,deaths:deaths,lastUpdate:lastUpdate});case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);return _context.abrupt(\"return\",_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();export var fetchDailyData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$axios$get2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"\".concat(url,\"/daily\"));case 3:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;return _context2.abrupt(\"return\",data.map(function(_ref3){var confirmed=_ref3.confirmed,deaths=_ref3.deaths,date=_ref3.reportDate;return{confirmed:confirmed.total,deaths:deaths.total,date:date};}));case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",_context2.t0);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function fetchDailyData(){return _ref2.apply(this,arguments);};}();export var fetchCountries=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$axios$get3,countries;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.get(\"\".concat(url,\"/countries\"));case 3:_yield$axios$get3=_context3.sent;countries=_yield$axios$get3.data.countries;return _context3.abrupt(\"return\",countries.map(function(country){return country.name;}));case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",_context3.t0);case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function fetchCountries(){return _ref4.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/zaida/Documents/my-app/src/api/index.js"],"names":["axios","url","fetchData","country","changeableUrl","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name"],"mappings":"2TAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAG,gCAAZ,CAEA,MAAO,IAAMC,CAAAA,SAAS,0FAAG,iBAAOC,OAAP,iNACnBC,aADmB,CACHH,GADG,CAGvB,GAAIE,OAAJ,CAAa,CACXC,aAAa,WAAMH,GAAN,uBAAuBE,OAAvB,CAAb,CACD,CALsB,sCAQgDH,CAAAA,KAAK,CAACK,GAAN,CAAUD,aAAV,CARhD,8EAQbE,IARa,CAQLC,SARK,uBAQLA,SARK,CAQMC,SARN,uBAQMA,SARN,CAQiBC,MARjB,uBAQiBA,MARjB,CAQyBC,UARzB,uBAQyBA,UARzB,iCAUd,CAAEH,SAAS,CAATA,SAAF,CAAaC,SAAS,CAATA,SAAb,CAAwBC,MAAM,CAANA,MAAxB,CAAgCC,UAAU,CAAVA,UAAhC,CAVc,8KAAH,kBAATR,CAAAA,SAAS,4CAAf,CAgBP,MAAO,IAAMS,CAAAA,cAAc,2FAAG,2MAEHX,CAAAA,KAAK,CAACK,GAAN,WAAaJ,GAAb,WAFG,yCAElBK,IAFkB,mBAElBA,IAFkB,kCAInBA,IAAI,CAACM,GAAL,CAAS,mBAAGL,CAAAA,SAAH,OAAGA,SAAH,CAAcE,MAAd,OAAcA,MAAd,CAAkCI,IAAlC,OAAsBC,UAAtB,OAA8C,CAAEP,SAAS,CAAEA,SAAS,CAACQ,KAAvB,CAA8BN,MAAM,CAAEA,MAAM,CAACM,KAA7C,CAAoDF,IAAI,CAAJA,IAApD,CAA9C,EAAT,CAJmB,kLAAH,kBAAdF,CAAAA,cAAc,2CAApB,CAUP,MAAO,IAAMK,CAAAA,cAAc,2FAAG,gNAEYhB,CAAAA,KAAK,CAACK,GAAN,WAAaJ,GAAb,eAFZ,yCAEVgB,SAFU,mBAElBX,IAFkB,CAEVW,SAFU,kCAInBA,SAAS,CAACL,GAAV,CAAc,SAACT,OAAD,QAAaA,CAAAA,OAAO,CAACe,IAArB,EAAd,CAJmB,kLAAH,kBAAdF,CAAAA,cAAc,2CAApB","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}